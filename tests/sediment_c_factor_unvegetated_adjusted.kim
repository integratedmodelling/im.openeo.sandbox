worldview im;

@test(
    name = "sediment.c_factor_unvegetated_adjusted",
    description  = "",
    // add to the list any concepts to be observed in the context below
    observations = (
       	    		"im|im.openeo.sandbox/tests/sediment_c_factor_unvegetated_adjusted.cover-management-resolver"
					"im|im.openeo.sandbox/tests/sediment_c_factor_unvegetated_adjusted.soil-retained-mass-caused-by-vegetation-resolver"
					"im|im.openeo.sandbox/tests/sediment_c_factor_unvegetated_adjusted.sediment_biophysical_supply_dynamic_by_landcover_class"
//     	    		"peopleea.soil.retention.cover-management-resolver",
//    				"soil:CoverManagement caused by ecology:Vegetation"
//    				"peopleea.soil.retention.cover-management-caused-by-vegetation-resolver-1"
//    				"peopleea.soil.retention.cover-management-caused-by-vegetation-resolver"
//"im|im.openeo.sandbox/tests/sediment_c_factor_unvegetated_adjusted.cover-management-caused-by-vegetation-resolver"
//    				"aries.global.sediment.soil-retained-mass-caused-by-vegetation-resolver"
    ),
    // add assertions to check the observations after execution
    assertions = ()
)
// change the concept to the one you want; use a URN optionally (in a separate test project including the resource)
observe /* a:urn:to:use#objectid as */ earth:Region named sediment_c_factor_unvegetated_adjusted
    over space(shape='EPSG:4326 POLYGON ((-2.406221688847746 43.01810182350334, -2.5527346740772385 43.01810182350334, -2.5527346740772385 43.06703050694972, -2.406221688847746 43.06703050694972, -2.406221688847746 43.01810182350334))',
    		grid="500 m"),
 //   		projection="EPSG:3035"),
    time(start=2018, end=2019, step=1.year);
//    time(year=2018);

 model 'local:ferdinando.villa:im.openeo.sandbox:vito.cfactor#output_warp=true&synchronous=true' 
 	as soil:CoverManagement;
    
@intensive(space)
model im:Retained soil:Soil im:Mass caused by ecology:Vegetation in t/ha
	observing
		soil:RainfallRunoffErosivity in (MJ*mm)/(ha*h)    named r_factor,
		soil:SoilErodibility 						      named k_factor, 
		soil:SlopeSteepnessAndLength 				      named ls_factor,
		soil:CoverManagement 						      named c_factor,
		soil:CoverManagement caused by ecology:Vegetation named c_factor_unvegetated,
		soil:SupportPractice 						      named p_factor
	set to [ 
		def rusle = (r_factor * k_factor * ls_factor * c_factor * p_factor)
        def ruslv = (r_factor * k_factor * ls_factor * c_factor_unvegetated)
        return ((c_factor > c_factor_unvegetated) ? (ruslv - rusle) : 0)];
//        return ((c_factor > c_factor_unvegetated) ? (ruslv - rusle) : 0)];        
//        return (nodata(c_factor) ? 0 : (ruslv - rusle))]; 

@var(timespan=(start end))
@documented(seeaeea.erosion) 
define table sediment_biophysical_supply_dynamic_by_landcover_class as {
	name: "sediment_biophysical"
	title: "Soil Erosion Control Physical Supply (tons soil retained)",
	label: "Soil Erosion Control Service Physical Supply Change Summary",
	target: im:Retained soil:Soil im:Mass caused by ecology:Vegetation in t/ha
	when: end
	observables: landcover:LandCoverType // not part of the model, add here if only mentioned in parameters
	use: tables.compiler.summarize(contabilize-nulls = true, 
		rowsummary = { filter: "change" title: "Net change"}, 
		colsummary=  { filter: "total", title: "Total" },
		rows =       { filter: %timespan% }, 
		columns =    { filter: landcover:LandCoverType }, 
		empty='', 
		no-data = ''
	)	
};                 	